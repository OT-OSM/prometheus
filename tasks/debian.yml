---
- name: Updating cache and installing systemd and unzip
  apt:
    update_cache: yes
    name: ['unzip', 'systemd']
    state: present
  register: task_result
  until: task_result is succeeded
  retries: 5
  delay: 5

- name: Creating user for prometheus
  user:
   name: prometheus
   shell: /bin/false

- name: Setting internal variables for convenience
  set_fact:
    prometheus_url: "{{ base_download_url }}/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz"

- name: Checking Prometheus Binary
  stat:
    path: "{{ prometheus_binary_path }}/prometheus"
  register: check_prom_binary

- name: Downloading the binary file for Prometheus
  unarchive:
    src: "{{ prometheus_url }}"
    dest: /tmp/
    remote_src: yes
  when: check_prom_binary.stat.exists == false

- name: Move the binary executable file
  copy:
    src: /tmp/prometheus-{{ version }}.linux-amd64/prometheus
    dest: "{{ prometheus_binary_path }}"
    mode: 0555
    remote_src: yes
  when: check_prom_binary.stat.exists == false

- name: Create directory for Prometheus Configuration and for Data dump
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
  with_items:
    - /etc/prometheus
    - /var/lib/prometheus

- name: generate prom targets in targets.json
  template:
    src: targets.json.j2
    dest: /etc/prometheus/targets.json
    owner: "{{ user_name }}"
    group: "{{ group_name }}"

- name: Adding Prometheus Configuration
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
  notify:
    - restart_prometheus_service

- name: Copy Service for Prometheus
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
  notify:
    - reload_prometheus_service
    - restart_prometheus_service
